name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Clone the repo to a subdirectory, so we can initialize the Zephyr
          # workspace in the parent directory
          path: zephyr-workspace/smart-guitar-amp-fw

      - name: üß∞ Install Dependencies + West
        # Install the Zephyr host build dependencies, and the west Python tool.
        # This list is from Zephyr's getting started guide:
        # https://docs.zephyrproject.org/latest/develop/getting_started/index.html
        run: |
          sudo apt update
          sudo apt install --no-install-recommends git cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
            make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

          pip3 install west

      - name: ü™Å Install Zephyr SDK
        # Fetch the Zephyr SDK from the GitHub Release artifcat, unpack it and
        # run the setup script, selecting the '-c' option to install cmake
        # packages and the '-t arm-zephyr-eabi' option to install the toolchain
        # only for the arm-zephyr-ebai (Cortex-M) architecture, since we don't
        # need the other toolchains (xtensa, riscv, etc.)
        run: |
          wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64_minimal.tar.xz
          tar xf zephyr-sdk-0.16.4_linux-x86_64_minimal.tar.xz -C ~/
          ~/zephyr-sdk-0.16.4/setup.sh -c -t arm-zephyr-eabi

      - name: ‚ôªÔ∏è Initialize Zephyr Workspace
        # Set up the Zephyr workspace and install Python dependencies
        run: |
          cd zephyr-workspace
          west init -l smart-guitar-amp-fw
          west update --narrow -o=--depth=1
          pip3 install -r zephyr/scripts/requirements.txt

      - name: üî® Build Project
        run: |
          cd zephyr-workspace
          west build \
            --board custom_plank \
            --pristine=always smart-guitar-amp-fw

      - name: üì¶ Save Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            zephyr-workspace/build/zephyr.hex
            zephyr-workspace/build/zephyr.bin
            zephyr-workspace/build/zephyr.elf